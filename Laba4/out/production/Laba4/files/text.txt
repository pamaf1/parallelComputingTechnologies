Java is a high-level class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible. It is a general-purpose programming 
language intended to let programmers write once, run anywhere (WORA), meaning that compiled Java code can run on all platforms that support Java without the need to recompile. 
Java applications are typically compiled to bytecode that can run on any Java virtual machine (JVM) regardless of the underlying computer architecture. The syntax of Java is similar 
to C and C++, but has fewer low-level facilities than either of them. The Java runtime provides dynamic capabilities (such as reflection and runtime code modification) that are typically
 not available in traditional compiled languages. As of 2019, Java was one of the most popular programming languages in use according to GitHub, particularly for clientâ€“server web 
applications, with a reported 9 million developers. Java was originally developed by James Gosling at Sun Microsystems and released in May 1995 as a core component of Sun Microsystems' 
Java platform. The original and reference implementation Java compilers, virtual machines, and class libraries were originally released by Sun under proprietary licenses. As of May 2007, 
in compliance with the specifications of the Java Community Process, Sun had relicensed most of its Java technologies under the GPL-2.0-only license. Oracle offers its own HotSpot Java 
Virtual Machine, however the official reference implementation is the OpenJDK JVM which is free open-source software and used by most developers and is the default JVM for almost all 
Linux distributions. As of March 2022, Java 18 is the latest version, while Java 17, 11 and 8 are the current long-term support (LTS) versions. Oracle released the last zero-cost public 
update for the legacy version Java 8 LTS in January 2019 for commercial use, although it will otherwise still support Java 8 with public updates for personal use indefinitely. 
Other vendors have begun to offer zero-cost builds of OpenJDK 8 and 11 that are still receiving security and other upgrades. Oracle (and others) highly recommend uninstalling outdated 
and unsupported versions of Java, due to unresolved security issues in older versions. Oracle advises its users to immediately transition to a supported version, such as one of the LTS versions 
One design goal of Java is portability, which means that programs written for the Java platform must run similarly on any combination of hardware and operating system with adequate 
run time support. This is achieved by compiling the Java language code to an intermediate representation called Java bytecode, instead of directly to architecture-specific machine code. 
Java bytecode instructions are analogous to machine code, but they are intended to be executed by a virtual machine (VM) written specifically for the host hardware. End-users commonly 
use a Java Runtime Environment (JRE) installed on their device for standalone Java applications or a web browser for Java applets.
Standard libraries provide a generic way to access host-specific features such as graphics, threading, and networking. The use of universal
bytecode makes porting simple. However, the overhead of interpreting bytecode into machine instructions made interpreted programs 
almost always run more slowly than native executables. Just-in-time (JIT) compilers that compile byte-codes to machine code during 
runtime were introduced from an early stage. Java's Hotspot compiler is actually two compilers in one; and with GraalVM 
(included in e.g. Java 11, but removed as of Java 16) allowing tiered compilation